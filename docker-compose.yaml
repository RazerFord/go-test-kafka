version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: init-kafka
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo topic name $TOPIC
      
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic $TOPIC --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  client:
    build:
      context: .
      dockerfile: dockerfile.app
      args:
        APP_TYPE: "client"
    container_name: client
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    environment:
      - topic=$TOPIC
      - host=$HOST
      - port=$PORT
      - count=10
      - duration=10
      - repeat=false

  server:
    build:
      context: .
      dockerfile: dockerfile.app
      args:
        APP_TYPE: "server"
    container_name: server
    depends_on:
      kafka:
        condition: service_started
      init-kafka:
        condition: service_completed_successfully
      client:
        condition: service_started
    environment:
      - topic=$TOPIC
      - host=$HOST
      - port=$PORT
      - server=8081
      - sleep=10
    ports:
      - 8081:8081

